---
title: "One Parameter Models"
date: "September 10, 2024"
date-modified: last-modified
format:
  metropolis-revealjs:
    mermaid-format: svg
---

```{r}
#| include: false
#| file: _setting.R
```

# Bernoulli Model

## Data (Subsample)

- Patients diagnosed with AIDS in Australia before 1 July 1991

```{r}
data("Aids2", package = "MASS")
set.seed(15)
Aids2_sub <- Aids2 |> sample_n(10)
Aids2_sub <- Aids2_sub |>
    mutate_at(vars(diag, death), as.Date, "1960-01-01")
Aids2_sub |>
    knitr::kable()
```

---

:::: {.columns}

::: {.column width="50%"}

![Cpc chine at English Wikipedia, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons](https://upload.wikimedia.org/wikipedia/commons/b/bf/Australian_States_and_Territories_with_CDS.jpg){.external}

:::

::: {.column width="50%"}

```{r}
#| fig-width: 3.5
#| fig-height: 3.5
#| out-width: "90%"
ggplot(Aids2_sub, aes(x = status, fill = status)) +
    geom_bar() +
    guides(fill = "none") +
    scale_fill_manual(values = c("grey", "red")) +
    ylim(0, 10) +
    labs(title = "observed data") +
    theme(axis.title.x = element_text(color = "red"))
```
  

:::

::::

Let's go through the Bayesian workflow

---

```{mermaid}
%%| fig-width: 10.5
%%| fig-height: 7
flowchart LR
  subgraph DATA
    direction TB
    A[Identify/Collect Data] --> B[Visualize Data]
  end
    %% B --> C[Choose/Modify Model]
  subgraph MODEL
    H -->|Model fit not satisfactory|C
    C[Choose/Modify Model] --> D[Specify Priors]
    D --> E[Prior Predictive Check]
    E --> G[MCMC Sampling with Convergence diagnostics]
    G --> H[Posterior Predictive Check]
  end
  subgraph RESULTS
    %% I -->|Model is reasonable|J[Model comparisons/averaging]
    J[Model comparisons/averaging] --> K[Interpret and Visualize Results]
  end
  DATA --> MODEL
  MODEL --> RESULTS
```

::: aside
Adapted from [@gelman2020](http://www.stat.columbia.edu/~gelman/research/unpublished/Bayesian_Workflow_article.pdf)
:::

## Choose a Model: Bernoulli

Data: $y$ = survival status (0 = "A", 1 = "D")

Parameter: $\theta$ = probability of "D"

Model equation: $y_i \sim \text{Bern}(\theta)$ for $i = 1, 2, \ldots, N$

- The model states:

> the sample data $y$ follows a Bernoulli distribution with the common parameter $\theta$

## Bernoulli Likelihood

Notice that there is no subscript for $\theta$:

- The model assumes each observation has the same $\theta$
- I.e., the observations are exchangeable

$$
P(y_1, y_2, \ldots, y_N) = \theta^z (1 - \theta)^{N - z}
$$

$z$ = number of "successes" ("D")

- $z$ = 6 in this illustrative sample

---

:::: {.columns}

::: {.column width="35%"}

```{r}
th <- seq(0, 1, by = 0.1)
bern_lik <- function(th, z = 6, n = 10) {
    th^z * (1 - th)^(n - z)
}
data.frame(
    theta = th,
    likelihood = bern_lik(th)
) |>
    knitr::kable(digits = c(1, 5))
```

:::

::: {.column width="65%"}

```{r}
#| fig-width: 3.5
#| fig-asp: 0.618
#| out-width: "90%"
ggplot(
    data.frame(x = c(0, 1)),
    aes(x = x)
) +
    stat_function(fun = bern_lik, col = "red") +
    labs(
        x = expression(theta),
        y = "likelihood"
    )
```

:::

::::

## Choosing Priors

When choosing priors, start with the **support** of the parameter(s)

- Support: Values that are possible

. . .

Support for $\theta$: [0, 1]

::: {.callout}

## One possible (but unlikely) option

```{r}
#| fig-width: 4
#| fig-asp: .56
ggplot(data.frame(x = c(0, 1)), aes(x = x)) +
    stat_function(
        fun = stepfun(c(0.40, 0.60),
            c(1 / 1.8, 5 / 1.8, 1 / 1.8),
            f = 0
        ),
        n = 501
    ) +
    labs(x = expression(theta), y = "density") +
    scale_x_continuous(breaks = c(0, 0.40, 0.60, 1)) +
    theme(axis.text.x = element_text(angle = 45)) +
    ylim(0, 3)
```

$\theta$ values in the range $[.40, .60)$ are **5** times more likely than any values outside of that range

:::

## Conjugate Prior: Beta Distribution

$$
P(\theta \mid a, b) \propto \theta^{a - 1} (1 - \theta)^{b - 1} I_{[0, 1]}
$$

```{r}
#| eval: false
#| echo: true
a <- 1
b <- 1
dbeta(theta1, shape1 = a, shape2 = b)
```

::: {.callout-important}

## Conjugate Prior

A prior distribution that yields posterior in the same distribution family as the prior

:::

::: aside
Some other conjugate distributions: <https://en.wikipedia.org/wiki/Conjugate_prior#Table_of_conjugate_distributions>
:::

---

Two **hyperparameters**, $a$ and $b$:

- $a - 1$ = number of prior 'successes' (e.g., "D")
- $b - 1$ = number of prior 'failures'

```{r}
#| fig-width: 7.5
#| fig-asp: 0.4
#| fig-align: center
#| echo: false
plist <- vector("list", 6L)
params_list <- list(c(a = 0.5, b = 0.5), 
                    c(a = 1, b = 1), 
                    c(a = 2, b = 4), 
                    c(a = 4, b = 2), 
                    c(a = 8, b = 8), 
                    c(a = 10, b = 20))
for (i in 1:6) {
  a <- params_list[[i]]["a"]
  b <- params_list[[i]]["b"]
  # curve(dbeta(x, a, b), ylab = "", xlab = expression(theta), 
  #       ylim = c(0, 5))
  plist[[i]] <- ggplot(data.frame(th = c(0, 1)), aes(x = th)) + 
    stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b)) + 
    ylim(0, 5) + 
    annotate("text", x = Inf, y = Inf, hjust = 1, vjust = 1, 
             label = paste("a =", a, "b =", b)) + 
    labs(y = "", x = expression(theta))
  # legend("topright", legend = bquote(a == .(a) ~~ b == .(b)))
}
gridExtra::grid.arrange(grobs = plist, nrow = 2)
```

## More on the Beta Distribution

When $a > b$, more density to the right (i.e., larger $\theta$), and vice versa

Mean = $a / (a + b)$

Concentration = $\kappa = a + b$; $\uparrow \kappa$, $\downarrow$ variance, $\uparrow$ strength of prior

E.g., A Beta(1, 1) prior means 0 prior success and 0 failure

- i.e., no prior information (i.e., *noninformative*)

---

::: {.callout-note}

## Notes on Choosing Priors

- **Give $>$ 0 probability/density for all possible values of a parameter**

- When the prior contains relatively little information
    * different choices usually make little difference

- Do a prior predictive check

- *Sensitivity analyses* to see how sensitive results are to different reasonable prior choices.

:::

## Obtaining the Posterior Analytically

$$
P(\theta \mid y) = \frac{P(y \mid \theta) P(\theta)}{\int_0^1 P(y \mid \theta^*) P(\theta^*) d \theta^*}
$$

The denominator is usually intractable

. . .

Conjugate prior: Posterior is from a known distribution family

- $N$ trials and $z$ successes
- $\mathrm{Beta}(a, b)$ prior
- $\Rightarrow$ $\mathrm{Beta}(a + z, b + N - z)$ posterior
    * $a + \color{red}{z} - 1$ successes
    * $b + \color{red}{N - z} - 1$ failures

## Back to the Example

$N$ = 10, $z$ = 6

:::: {.columns}

::: {.column width="50%"}

Prior: Do you believe that the fatality rate of AIDS is 100%? or 0%?

- Let's use $\kappa = 4$, prior mean = 0.5, so $a$ = 2 and $b$ = 2

:::

::: {.column width="50%"}

```{r}
#| fig-width: 3
#| fig-asp: 1
#| out-width: 100%
ggplot(data.frame(th = c(0, 1)), aes(x = th)) +
    stat_function(fun = dbeta, args = list(shape1 = 2, shape2 = 2)) +
    ylim(0, 3) +
    annotate("text",
      x = Inf, y = Inf, hjust = 1, vjust = 1,
      label = paste("a =", 2, "b =", 2)
    ) +
    labs(y = "", x = expression(theta))
```

:::

::::

## Posterior Beta

$$
\theta \mid y \sim \mathrm{Beta}(2 + 6, 2 + 4)
$$

```{r}
#| echo: true
#| output-location: fragment
#| fig-width: 5
#| fig-asp: 0.618
ggplot(data.frame(x = c(0, 1)), aes(x = x)) +
    stat_function(fun = dbeta,
                  args = list(shape1 = 8, shape2 = 6)) +
    labs(title = "Beta(a = 8, b = 6)",
         x = expression(theta), y = "Density")
```

## Summarizing the Posterior

If the posterior is from a known family, one can evalue summary statistics analytically

- E.g., $E(\theta \mid y) = \int_0^1 \theta P(\theta \mid y) d \theta$

However, more often, a simulation-based approach is used to draw samples from the posterior

```{r}
#| echo: true
num_draws <- 1000
sim_theta <- rbeta(1000, shape1 = 8, shape2 = 6)
```

---

```{r}
data.frame(
    Statistic = c(
        "mean", "median", "mode", "SD", "MAD", "80% CI",
        "80% HDI"
    ),
    `Common name` =
        c(
            "Bayes estimate/Expected a posteriori (EAP)",
            "Posterior median",
            "Maximum a posteriori (MAP)",
            "Posterior SD",
            "Posterior MAD",
            "(Equal-tailed) Credible interval",
            "HDI/Highest Posterior Density Interval (HPDI)"
        ),
    Value = c(
        round(mean(sim_theta), 3),
        round(median(sim_theta), 3),
        round(
            density(sim_theta, bw = "SJ") |>
                {
                    function(dens) dens$x[which.max(dens$y)]
                }(), 3
        ),
        round(sd(sim_theta), 3),
        round(mad(sim_theta), 3),
        paste0(
            "[",
            paste0(
                round(
                    quantile(sim_theta, probs = c(.1, .9)), 3
                ),
                collapse = ", "
            ),
            "]"
        ),
        paste0(
            "[",
            paste0(
                round(
                    HDInterval::hdi(sim_theta, credMass = 0.80), 3
                ),
                collapse = ", "
            ),
            "]"
        )
    )
) |>
    knitr::kable(col.names = c("Statistic", "Common Name", "Value"))
```

## Using the Full Data

1082 A, 1761 D $\rightarrow$ $N$ = 2843, $z$ = 1761

Posterior: Beta(1763, 1084)

```{r}
#| fig-width: 5
#| fig-asp: 0.56
ggplot(data.frame(x = c(0, 1)), aes(x = x)) +
    stat_function(fun = dbeta,
                  args = list(shape1 = 1763, shape2 = 1084),
                  n = 501) +
    labs(title = "Beta(a = 1763, b = 1084)", y = "Density",
         x = expression(theta~"|"~y))
```

## Posterior Predictive Check

::: {.callout-important}

## Posterior Predictive Distribution

$$
P(\tilde y \mid y) = \int P(\tilde y \mid \theta, y) P(\theta \mid y) d \theta
$$

- $\tilde y$ = new/future data

:::

. . .

Simulate a new $\theta^*$ from posterior, then simulate a new data set

. . .

If the model does not fit the data, any results are basically meaningless at best, and can be very misleading

Requires substantive knowledge and some creativity

- E.g., are the case fatality rates equal across the 4 state categories?

---

```{r}
#| echo: true
theta_new <- rbeta(1, 1763, 1084)                 # <1>
status_new <- sample(c("D", "A"), nrow(Aids2),    # <2>
    replace = TRUE, prob = c(theta_new, 1 - theta_new)
)
df_new <- Aids2 |>
    mutate(status = factor(status_new))
```
1. Sample a new theta from the posterior
2. Sample new data based on the new theta

---

```{r}
#| fig-width: 7.7
#| results: hide
plist <- vector("list", 12L)
plist[[1]] <- ggplot(
    Aids2,
    aes(x = state, y = mean(status == "D"), fill = state)
) +
    geom_bar(stat = "identity") +
    guides(fill = "none") +
    labs(x = "Observed data", y = "Number of Deaths") +
    theme(axis.title.x = element_text(color = "red")) +
    ylim(0, 1200)
for (i in 1:11) {
    # Get the a value from posterior samples
    theta_post <- rbeta(1, 1763, 1084)
    # For each plausible theta value, generate a status variable
    status_new <- sample(c("D", "A"), nrow(Aids2),
        replace = TRUE,
        prob = c(theta_post, 1 - theta_post)
    )
    df_new <- Aids2 |>
        mutate(status = factor(status_new))
    plist[[i + 1]] <- plist[[1]] %+% df_new +
        labs(x = paste("Simulated data", i)) +
        theme(axis.title.x = element_text(color = "black"))
}
gridExtra::grid.arrange(grobs = plist, nrow = 3)
```

## Some Common Checks

- Does the model simulate data with similar distributions as the observed data?
    * e.g., skewness, range
- Subsets of observed data that are of more interest?
    * e.g., old age group
    * If not fit, age should be incorporated in the model

See an example in @gabry2019

# Stan

See [notes](/docs/04b-beta-bernoulli-stan.html)

## Stan Example

```{stan}
#| echo: true
#| output.var: bern_mod
#| file: "../usc-psyc573-notes/stan_code/beta-bernoulli.stan"
#| eval: false
```

```{r}
#| echo: true
#| eval: false
bern_mod <- cmdstan_model("stan_code/beta-bernoulli.stan")
fit <- bern_mod$sample(Aids2_standata)
```

## Example Check: Sample mean by age group

Here we use the function `bayesplot::ppc_stat_grouped()`{.r}

```r
age50 <- factor(Aids2$age > 50, labels = c("<= 50", "> 50"))  # <1>
bern_pp_fit$draws("ytilde", format = "draws_matrix") |>         # <2>
    ppc_stat_grouped(y = Aids2_standata$y, group = age50, stat = "mean")  # <3>
```
1. Create binary indicator of two age groups
2. Extract simulated data sets
3. Plot a histogram of the sample means from the simulated data (i.e., posterior predictive distribution) for each age group

# Other One-Parameter Models

## Binomial Model

- For count outcome: $y_i \sim \mathrm{Bin}(N_i, \theta)$
    * $\theta$: rate of occurrence (per trial)
- Conjugate prior: Beta
- E.g.,
    * $y$ minority candidates in $N$ new hires
    * $y$ out of $N$ symptoms checked
    * A word appears $y$ times in a tweet of $N$ number of words

## Poisson Model

- For count outcome: $y_i \sim \mathrm{Pois}(\theta)$
    * $\theta$: rate of occurrence
- Conjugate prior: Gamma
- E.g., 
    * Drinking $y$ times in a week
    * $y$ hate crimes in a year for a county
    * $y$ people visiting a store in an hour

## Bibliography