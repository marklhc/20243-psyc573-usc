(function moduleExporter(b,c){var a=GLOBAL.WebModule["exports"](b,c);if(typeof module!=="undefined"){module.exports=a}return a})("TypedArray",function moduleClosure(l,f,h){var m={BIG_ENDIAN:!new Uint8Array(new Uint16Array([1]).buffer)[0],hton2:q,hton4:o,hton8:n,ntoh2:q,ntoh4:o,ntoh8:n,expand:r,concat:a,read1:k,read2:j,read3:i,read4:g,read2LE:p,read3LE:e,read4LE:s,toString:b,fromString:d,repository:"https://github.com/uupaa/TypedArray.js",};function q(t){return m.BIG_ENDIAN?[t[0],t[1]]:[t[1],t[0]]}function o(t){return m.BIG_ENDIAN?[t[0],t[1],t[2],t[3]]:[t[3],t[2],t[1],t[0]]}function n(t){return m.BIG_ENDIAN?[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7]]:[t[7],t[6],t[5],t[4],t[3],t[2],t[1],t[0]]}function k(t){return t.source[t.cursor++]>>>0}function j(t){return((t.source[t.cursor++]<<8)|t.source[t.cursor++])>>>0}function i(t){return((t.source[t.cursor++]<<16)|(t.source[t.cursor++]<<8)|t.source[t.cursor++])>>>0}function g(t){return((t.source[t.cursor++]<<24)|(t.source[t.cursor++]<<16)|(t.source[t.cursor++]<<8)|t.source[t.cursor++])>>>0}function p(t){return((t.source[t.cursor++])|t.source[t.cursor++]<<8)>>>0}function e(t){return((t.source[t.cursor++])|(t.source[t.cursor++]<<8)|t.source[t.cursor++]<<16)>>>0}function s(t){return((t.source[t.cursor++])|(t.source[t.cursor++]<<8)|(t.source[t.cursor++]<<16)|t.source[t.cursor++]<<24)>>>0}function r(v){var u=v.constructor.name;var t=new l[u](v.length*2);t.set(v);return t}function a(){if(!t(arguments)){throw new TypeError("MIXED TYPE")}var w=new ArrayBuffer(c(arguments));var u=new l[arguments[0].constructor.name](w);for(var x=0,v=0,y=arguments.length;v<y;++v){u.set(arguments[v],x);x+=arguments[v].length}return u;function t(A){var B=A[0].constructor.name;for(var z=1,C=A.length;z<C;++z){if(B!==A[z].constructor.name){return false}}return true}}function c(v){var t=0;for(var u=0,w=v.length;u<w;++u){t+=v[u].byteLength}return t}function b(w){if(h){$valid($type(w,"TypedArray|Array|omit"),b,"source")}if(!w){return""}var t=[],u=0,y=w.length,v=24000;var x=Array.isArray(w)?"slice":"subarray";if(y<v){return String.fromCharCode.apply(null,w)}for(;u<y;u+=v){t.push(String.fromCharCode.apply(null,w[x](u,u+v)))}return t.join("")}function d(w,v){if(h){$valid($type(w,"BinaryString"),d,"source");$valid($type(v,"Function|omit"),d,"type")}v=v||Uint8Array;var t=new v(w.length);for(var u=0,x=w.length;u<x;++u){t[u]=w.charCodeAt(u)}return t}return m});